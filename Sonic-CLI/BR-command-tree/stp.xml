<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE CLISH_MODULE [
<!ENTITY START_PORT_ID "1">
<!ENTITY MAX_PORT_ID "32">
<!ENTITY START_SUB_PORT_ID "1">
<!ENTITY MAX_SUB_PORT_ID "4">
<!ENTITY MAX_MTU "9216">
]>
<!-- Copyright 2019 Dell, Inc.  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. -->
<CLISH_MODULE xmlns="http://www.dellemc.com/sonic/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xi="http://www.w3.org/2001/XInclude" xsi:schemaLocation="http://www.dellemc.com/sonic/XMLSchema http://www.dellemc.com/sonic/XMLSchema/clish.xsd">
  <!--=========================================================================-->
  <PTYPE name="STP_FORWARD_DELAY" method="integer" pattern="4..30" help=""/>
  <!--=======================================================-->
  <PTYPE name="STP_HELLO_TIME" method="integer" pattern="1..10" help=""/>
  <!--=======================================================-->
  <PTYPE name="STP_MAX_AGE" method="integer" pattern="6..40" help=""/>
  <!--=======================================================-->
  <PTYPE name="STP_PRIORITY" method="integer" pattern="0..61440" help=""/>
  <!--=======================================================-->
  <PTYPE name="STP_FORCE_VERSION" method="integer" pattern="( [0] | [2])" help=""/>
  <!--=======================================================-->
  <PTYPE name="STP_COST" method="integer" pattern="1..200000000" help=""/>
  <!--=======================================================-->
  <PTYPE name="STP_PORT_PRIORITY" method="integer" pattern="0..240" help=""/>
  <!--=======================================================-->
  <PTYPE name="STP_VLAN_ID" method="integer" pattern="1..4094" help="VLAN ID"/>
  <!--=======================================================-->
  <PTYPE name="STP_GUARD_ROOT_TIMEOUT" method="integer" pattern="5..600" help=""/>
  <!--=======================================================-->
  <PTYPE name="STP_GUARD_TYPE" method="select" pattern="root loop none" help="Guard type"/>
  <!--=======================================================-->
  <PTYPE name="STP_MST_REVISION" method="integer" pattern="0..65535" help="Revision Value"/>
  <!--=======================================================-->
  <PTYPE name="STP_MST_INSTANCE" method="integer" pattern="1..4094" help="Instance Id"/>
  <!--=======================================================-->
  <PTYPE name="STP_MAX_HOPS" method="integer" pattern="1..40" help="Max hops value"/>
  <!--=======================================================-->
  <PTYPE name="STP_MST_INSTANCE_0" method="integer" pattern="0..4094" help="Instance Id"/>
  <!--=======================================================-->
  <VIEW name="enable-view">
    <COMMAND name="show spanning-tree" help="Display spanning-tree information">
      <PARAM name="vlan-id" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, Vlan20,70-100,142" ptype="VLAN_INTERFACE_RANGE" mode="subcommand" optional="true">
        <PARAM name="interface" help="Interface specific information" ptype="SUBCOMMAND" mode="subcommand" optional="true">
          <PARAM name="name" help="VLAN member interface name" ptype="PHY_PO_INTERFACE"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp process_stp_show show_stp.j2 ${vlan-id} ${name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Shows spanning-tree information
         </DESCRIPTION>
        <USAGE>
             This command is useful in viewing the spanning-tree information
         </USAGE>
        <EXAMPLE summary="show spanning-tree">
 			sonic(config)# do show spanning-tree
             Spanning-tree Mode: PVST
              
             VLAN 100 - STP instance 0
             ------------------------------------------------------------------------------------------------------------ 
             STP Bridge Parameters:
              
             Bridge            Bridge    Bridge    Bridge    Hold  LastTopology  Topology  
             Identifier        MaxAge    Hello     FwdDly    Time  Change        Change    
             hex               sec       sec       sec       sec   sec           cnt       
             80643c2c99a704a0  20        2         15        1     515           4         
              
             RootBridge        RootPath  DesignatedBridge  Root        Max  Hel  Fwd  
             Identifier        Cost      Identifier        Port        Age  lo   Dly  
             hex                         hex                           sec  sec  sec  
             00646cb9c51613ca  1600      10643c2c992d8235  PortChannel120   2    15   
              
             STP Port Parameters:
 			Port            Prio Path      Port Uplink BPDU   Guard State      Designated Designated       Designated
 			Num             rity Cost      Fast Fast   Filter Type             Cost       Root             bridge 
             PortChannel1    128  800       N    N      N      -		FORWARDING 800        00646cb9c51613ca 10643c2c992d8235 
         </EXAMPLE>
      </DOCGEN>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show spanning-tree counters" help="Counters">
      <PARAM name="vlan-id" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, Vlan20,70-100,142" ptype="VLAN_INTERFACE_RANGE" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp process_stp_show_counters show_stp_counters.j2 ${vlan-id} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Shows spanning-tree counters information
         </DESCRIPTION>
        <USAGE>
             This command is useful in viewing the spanning-tree counters information
         </USAGE>
        <EXAMPLE summary="show spanning-tree counters">
             sonic(config)# do show spanning-tree counters
              
             VLAN 100 - STP instance 0
             ----------------------------------------------------------------------
             PortNum         BPDU Tx   BPDU Rx   TCN Tx    TCN Rx    
                                                                     
             ----------------------------------------------------------------------
             Ethernet0       0         0         0         0         
             Ethernet48      53        7         1         0         
             Ethernet62      0         0         0         0         
             Ethernet64      0         0         0         0         
             PortChannel1    0         76        1         0         
             PortChannel2    0         0         0         0         
             PortChannel3    0         0         0         0         
         </EXAMPLE>
      </DOCGEN>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show spanning-tree inconsistentports" help="Root/Loop guard information for all VLANs">
      <PARAM name="vlan-id" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, Vlan20,70-100,142" ptype="VLAN_INTERFACE_RANGE" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp process_stp_show_inconsistentports show_stp_root_guard.j2 ${vlan-id} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Shows spanning-tree root or loop inconsistent information
         </DESCRIPTION>
        <USAGE>
             This command is useful in viewing the spanning-tree root or loop inconsistent ports information
         </USAGE>
        <EXAMPLE summary="show spanning-tree inconsistentports">
             sonic# show spanning-tree inconsistentports 
              
             Root guard timeout: 30  secs
             Loop guard default: Enabled
 
             ----------------------------------------------------------------------
             PortNum          VLAN  Inconsistency State                          
             ----------------------------------------------------------------------
             Ethernet48       100   Root Inconsistent (29 seconds left on timer)
 			Ethernet49       10    Loop Inconsistent
         </EXAMPLE>
      </DOCGEN>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show spanning-tree bpdu-guard" help="BPDU guard information">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp get_openconfig_spanning_tree_stp_interfaces show_stp_bpdu_guard.j2 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Shows spanning-tree BPDU guard information
         </DESCRIPTION>
        <USAGE>
             This command is useful in viewing the spanning-tree BPDU guard information for the ports
         </USAGE>
        <EXAMPLE summary="show spanning-tree bpdu-guard">
             sonic#show spanning-tree bpdu-guard 
             PortNum         Shutdown    Port shut          
                             Configured  due to BPDU guard  
             Ethernet64       Y           N                  
             PortChannel2     Y           N                  
         </EXAMPLE>
      </DOCGEN>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show running-configuration spanning-tree" help="Display spanning-tree configuration">
      <ACTION builtin="clish_pyobj">sonic_cli_stp show_running_spanning_tree views=configure-view" </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Shows running-config for spanning-tree 
         </DESCRIPTION>
        <USAGE>
             This command is useful in viewing a summary of running-config for spanning-tree 
         </USAGE>
        <EXAMPLE summary="show running-config spanning-tree">
 			sonic-cli# show running-configuration spanning-tree
 			spanning-tree mode pvst
 			spanning-tree edge-port bpdufilter default
 			spanning-tree forward-time 4
 			spanning-tree guard root timeout 5
 			spanning-tree hello-time 1
 			spanning-tree max-age 40
 			spanning-tree priority 61440
 			!
 			no spanning-tree vlan 101
 			!
 			spanning-tree vlan 100 forward-time 5
 			spanning-tree vlan 100 hello-time 3
 			!
 			spanning-tree vlan 101 forward-time 15
 			!
 			interface Ethernet0
 			 spanning-tree bpdufilter enable
 			 spanning-tree vlan 100 cost 1
 			!
 			interface PortChannel10
 			 no spanning-tree enable
 			 no spanning-tree portfast
 			 spanning-tree cost 2
 			 spanning-tree vlan 100 cost 1
         </EXAMPLE>
      </DOCGEN>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show spanning-tree mst" help="Shows MST configuration">
      <PARAM name="inst-id" help="MST instance range, example: 1-5,9,11-15" ptype="STP_MST_INST_RANGE" optional="true">
        <PARAM name="detail" help="Detailed information" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp show_stp_mst_inst show_stp_mst.j2 ${inst-id} ${detail} </ACTION>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show spanning-tree mst detail" help="Shows MST detailed configuration">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp show_stp_mst_inst show_stp_mst_detail.j2 </ACTION>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show spanning-tree mst interface" help="Shows interface specific information">
      <PARAM name="name" help="Interface name" ptype="PHY_PO_INTERFACE">
        <PARAM name="detail" help="Detailed information" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp show_stp_mst_intf show_stp_mst_intf.j2 ${name} ${detail} </ACTION>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show spanning-tree mst configuration" help="Shows MST configuration">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp show_stp_mst_config show_stp_mst_config.j2 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Shows MST configuration 
             </DESCRIPTION>
        <USAGE>
                 This command is useful in viewing the MST configuration 
             </USAGE>
        <EXAMPLE summary="show spanning-tree mst configuration">
             sonic-cli# show spanning-tree mst configuration
             Name      [test]
             Revision  10    Instances configured 4
             Digest    0x43A9ECEFACA62624BF0D53DB74D07750
             Instance  Vlans mapped
             -----------------------------------------------------------
             0          1-9,11-19,21-4093
             1          10
             2          20
             4094       4094
             -----------------------------------------------------------
             </EXAMPLE>
      </DOCGEN>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="clear spanning-tree" access="netadmin" help="Clear spanning tree counters"> </COMMAND>
    <COMMAND name="clear spanning-tree counters" access="netadmin" help="Clear spanning tree counters">
      <PARAM name="clear-stp-subcmd" help="" mode="switch" ptype="SUBCOMMAND" optional="true">
        <PARAM name="vlan-id" help="VLAN ID" ptype="VLAN_INTERFACE" mode="subcommand"> </PARAM>
        <PARAM name="interface" help="Interface name" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="intfname" help="Interface name" ptype="PHY_PO_INTERFACE"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp clear_stp_stats ${__full_line} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Clears spanning-tree counters.
             </DESCRIPTION>
        <EXAMPLE summary="Clear spanning-tree counters">
                 sonic# clear spanning-tree counters
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
  </VIEW>
  <!-- Config mode -->
  <VIEW name="configure-view">
    <!-- no spanning tree -->
    <COMMAND name="no spanning-tree" access="netadmin" help="Disables spanning-tree configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN/STP_VLAN_LIST/name={vlan_name}" command_keys="vlan_name=*" render_command_cb="no_spanning_tree_vlan">
      <PARAM name="vlan-range" help="Disables spanning-tree on a specific VLAN or a range of VLANS; for example, Vlan20,70-100,142" ptype="VLAN_INTERFACE_RANGE"> </PARAM>
      <PARAM name="stp-vlan-subcmds" help="Spanning tree subcommands" ptype="SUBCOMMAND" mode="switch" optional="true">
        <PARAM name="forward-time" help="Reset forward delay time to default value" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="hello-time" help="Reset hello time to default value" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="max-age" help="Reset max-age to default value" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="priority" help="Resets bridge priority to default value" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_vlan_subcmds ${stp-vlan-subcmds} ${vlan-range}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure spanning-tree parameters on per VLAN basis
         </DESCRIPTION>
        <USAGE>
             These commands are similar to the global level commands but allow disabling the spanning-tree parameters on per VLAN basis.
         </USAGE>
        <EXAMPLE>
             sonic(config)#no spanning-tree vlan 100  
             sonic(config)#no spanning-tree vlan 100 forward-time
             sonic(config)#no spanning-tree vlan 100 hello-time
             sonic(config)#no spanning-tree vlan 100 max-age 
             sonic(config)#no spanning-tree vlan 100 priority
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree mode" access="netadmin" help="Configure spanning tree mode" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL">
      <PARAM name="mode-subcmds" help="Spanning tree subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="pvst" help="Enable PVST+ (based on IEEE 802.1D)" ptype="SUBCOMMAND" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/mode=pvst" mode="subcommand" optional="true"> </PARAM>
        <PARAM name="rapid-pvst" help="Enable rapid PVST+ (based on IEEE 802.1w)" ptype="SUBCOMMAND" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/mode=rpvst" mode="subcommand" optional="true"> </PARAM>
        <PARAM name="mst" help="Enables MST (based on IEEE 802.1s)" ptype="SUBCOMMAND" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/mode=mst" mode="subcommand" optional="true"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_mode ${__params}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure the global spanning-tree mode for the device
         </DESCRIPTION>
        <USAGE>
             This command allows configuring the spanning-tree mode for the device. There are 2 modes supported - pvst and rapid-pvst.
         </USAGE>
        <EXAMPLE>
             sonic(config)#spanning-tree mode pvst
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree edge-port" access="netadmin" help="Edge-port configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL">
      <PARAM name="bpdufilter" help="BPDU Filter options" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="default" help="Enable bpdufilter on edge-ports" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/bpdu_filter=true" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_bpdu_filter True
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure spanning-tree global level BPDU filter
         </DESCRIPTION>
        <USAGE>
             This command allows configuring global level BPDU filter
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree edge-port bpdufilter default
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree forward-time" access="netadmin" help="Configure forward delay time" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" render_command_cb="spanning_tree_global_fwd_delay" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="seconds" help="Forward time value (sec)" ptype="STP_FORWARD_DELAY"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_forwarding_delay ${seconds}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure the spanning-tree forward delay time.
         </DESCRIPTION>
        <USAGE>
             This command allows configuring the forward delay time in seconds (default = 15), range 4-30.
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree forward-time 20
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree guard" access="netadmin" help="Guard configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" ptype="SUBCOMMAND" mode="subcommand" render_command_cb="spanning_tree_global_root_guard_timeout">
      <PARAM name="root" help="Root guard options" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="timeout" help="Configure root guard timeout" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Timeout value (sec)" ptype="STP_GUARD_ROOT_TIMEOUT" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/rootguard_timeout"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_rootguard_timeout ${value}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure the spanning-tree root guard timeout.
         </DESCRIPTION>
        <USAGE>
             This command allows configuring a root guard timeout value. Once superior BPDUs stop coming on the port, device will wait for a period until root guard timeout before moving the port to forwarding state(default = 30 secs), range 5-600.
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree guard root timeout 10
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree hello-time" access="netadmin" help="Configure hello time" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" render_command_cb="spanning_tree_global_hello_time" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="seconds" help="Hello time value (sec)" ptype="STP_HELLO_TIME"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_hello_time ${seconds}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure the spanning-tree hello time value.
         </DESCRIPTION>
        <USAGE>
             This command allow configuring the hello interval in secs for transmission of bpdus (default = 2), range 1-10.
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree hello-time 3
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree max-age" access="netadmin" help="Configure max-age time" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" ptype="SUBCOMMAND" render_command_cb="spanning_tree_global_max_age" mode="subcommand">
      <PARAM name="seconds" help="Max-age time value (sec)" ptype="STP_MAX_AGE"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_max_age ${seconds}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure the spanning-tree max-age time value.
         </DESCRIPTION>
        <USAGE>
             This command allows configuring the maximum time to listen for root bridge in seconds (default = 20), range 6-40.
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree max-age 22
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree priority" access="netadmin" help="Configure bridge priority" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" ptype="SUBCOMMAND" render_command_cb="spanning_tree_global_priority" mode="subcommand">
      <PARAM name="value" help="Bridge priority value (multiples of 4096)" ptype="STP_PRIORITY"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_bridge_priority ${value}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure the global level spanning-tree bridge priority value.
         </DESCRIPTION>
        <USAGE>
             This command allows configuring the bridge priority in increments of 4096, range 0-61440
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree priority 4096
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree loopguard" access="netadmin" help="Enable spanning tree loopguard" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" render_command_cb="spanning_tree_global_loop_guard">
      <PARAM name="default" help="Enable loopguard by default on all ports" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_loop_guard True
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure the spanning-tree loop guard.
         </DESCRIPTION>
        <USAGE>
             This command allows to enable loop guard globally on all ports. When loop guard is enabled and if BPDUs are not received on a non-designated port, that port is moved into the STP loop-inconsistent blocking state, instead of the listening / learning / forwarding state.
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree loopguard default
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree portfast" access="netadmin" help="Enable spanning-tree portfast" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" render_command_cb="spanning_tree_global_portfast">
      <PARAM name="default" help="Enable portfast by default on all access ports" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_portfast True
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure the spanning-tree portfast.
         </DESCRIPTION>
        <USAGE>
             This command allows to enable portfast globally on all access ports. When portfast is enabled, port transitions from blocking to forwarding state immediately, bypassing the usual 802.1D STP transition states.
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree portfast default
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree default-block" access="netadmin" help="Enable ports in block mode during init" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_INIT/STP_INIT_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" render_command_cb="spanning_tree_global_dfltblock" hidden="true">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_dfltblock True
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure spanning-tree default blocking mode.
         </DESCRIPTION>
        <USAGE>
             This command allows to enable default blocking mode globally on all stp ports. When default blocking mode is enabled, ports are added in STP blocked state during init" 
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree default-block
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree mst configuration" access="netadmin" help="MST configuration mode" view="configure-mst-view" command_keys="keyleaf_val=GLOBAL, inst_id=*" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/keyleaf={keyleaf_val};sonic-spanning-tree:sonic-spanning-tree/STP_MST_INST/STP_MST_INST_LIST/instance={inst_id}" render_command_cb="spanning_tree_mst_config">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_config_mode 
 </ACTION>
    </COMMAND>
    <COMMAND name="spanning-tree mst max-hops" access="netadmin" help="Configures max-hop count for MST" ptype="SUBCOMMAND" mode="subcommand" command_keys="keyleaf_val=GLOBAL" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/keyleaf={keyleaf_val}">
      <PARAM name="hop-count" help="Hop count" ptype="STP_MAX_HOPS" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/max_hops"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_max_hop_count ${hop-count}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configures max-hop count for MST.
         </DESCRIPTION>
        <USAGE>
             This command allows configuring the max-hops value for the MST.
         </USAGE>
        <EXAMPLE>
             sonic(config)# spanning-tree mst max-hops 10
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree mst hello-time" access="netadmin" help="Configures hello time" command_keys="keyleaf_val=GLOBAL" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/keyleaf={keyleaf_val}" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="seconds" help="Hello time value (sec)" ptype="STP_HELLO_TIME" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/hello_time"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_hello_time ${seconds}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Configure hello time value for MSTP.
             </DESCRIPTION>
        <USAGE>
                 This command allow configuring the hello interval in secs for transmission of bpdus (default = 2), range 1-10.
             </USAGE>
        <EXAMPLE>
                 sonic(config)# spanning-tree mst hello-time 3
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree mst forward-time" access="netadmin" help="Configures forward delay time" command_keys="keyleaf_val=GLOBAL" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/keyleaf={keyleaf_val}" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="seconds" help="Forward time value (sec)" ptype="STP_FORWARD_DELAY" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/forwarding_delay"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_forwarding_delay ${seconds}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Configure forward delay time for MSTP.
             </DESCRIPTION>
        <USAGE>
                 This command allows configuring the forward delay time in seconds (default = 15), range 4-30.
             </USAGE>
        <EXAMPLE>
                 sonic(config)# spanning-tree mst forward-time 20
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree mst max-age" access="netadmin" help="Configures max-age time" command_keys="keyleaf_val=GLOBAL" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/keyleaf={keyleaf_val}" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="seconds" help="Max-age time value (sec)" ptype="STP_MAX_AGE" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/max_age"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_max_age ${seconds}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Configure max-age time value for MSTP.
             </DESCRIPTION>
        <USAGE>
                 This command allows configuring the maximum time to listen for root bridge in seconds (default = 20), range 6-40.
             </USAGE>
        <EXAMPLE>
                 sonic(config)# spanning-tree mst max-age 22
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree mst" access="netadmin" help="MST Configuration Mode" command_keys="inst_id=*" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST_INST/STP_MST_INST_LIST/instance={inst_id}" render_command_cb="spanning_tree_mst_inst_priority">
      <PARAM name="inst-id" help="MST instance range, example: 1-5,9,11-15" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="priority" help="Configures bridge priority for MST" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="value" help="Bridge priority value (multiples of 4096)" ptype="STP_PRIORITY"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_priority ${inst-id} ${value}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure bridge priority to MST. 
         </DESCRIPTION>
        <USAGE>
             This command allows configuring the bridge priority to MST in increments of 4096. 
         </USAGE>
        <EXAMPLE>
             sonic(config)#spanning-tree mst 1 priority 4096 
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <!-- no spanning tree -->
    <COMMAND name="no spanning-tree mst" access="netadmin" help="MSTP Configuration Mode">
      <PARAM name="inst-id" help="MST instance range, example: 1-5,9,11-15" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="priority" help="Unconfigures bridge priority for MST" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_priority ${inst-id}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Unconfigure bridge priority to MST. 
         </DESCRIPTION>
        <USAGE>
             This command allows unconfiguring the bridge priority to MST. 
         </USAGE>
        <EXAMPLE>
             sonic(config)#no spanning-tree mst 1 priority 
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst hello-time" access="netadmin" help="Resets hello time to default value" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_hello_time
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Remove the MSTP hello time configuration.
             </DESCRIPTION>
        <USAGE>
                 This command allows resetting the hello interval configuration.
             </USAGE>
        <EXAMPLE>
                 sonic(config)#no spanning-tree mst hello-time
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst forward-time" access="netadmin" help="Resets forward time to default value" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_forwarding_delay
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Remove the MSTP forward delay time configuration
             </DESCRIPTION>
        <USAGE>
                 This command allows resetting the forward delay time to default value
             </USAGE>
        <EXAMPLE>
                 sonic(config)# no spanning-tree mst forward-time
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst max-age" access="netadmin" help="Resets max-age to default value" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_max_age
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Remove the MSTP max-age time value.
             </DESCRIPTION>
        <USAGE>
                 This command allows resetting the max age configuration.
             </USAGE>
        <EXAMPLE>
                 sonic(config)#no spanning-tree mst max-age
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst max-hops" access="netadmin" help="Unconfigures max-hop count for MST" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_max_hop_count 
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Unconfigures max-hop count for MST.
             </DESCRIPTION>
        <USAGE>
                 This command allows unconfiguring the max-hops value for the MST.
             </USAGE>
        <EXAMPLE>
                 sonic(config)# no spanning-tree mst max-hops 
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst configuration" access="netadmin" help="Deletes mst configuration">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_all_config </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Deletes MST configuration
             </DESCRIPTION>
        <USAGE>
                 This command deletes the name, revision number and VLAN to instance mapping information and sets to the default values.
             </USAGE>
        <EXAMPLE>
                 sonic(config)#no spanning-tree mst configuration 
             </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree edge-port" access="netadmin" help="Edge port configuration">
      <PARAM name="bpdufilter" help="BPDU filter options" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="default" help="Disable BPDU filter on all edge ports" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_bpdu_filter False
 </ACTION>
    </COMMAND>
    <COMMAND name="no spanning-tree mode" access="netadmin" help="Disable spanning-tree">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_global_mode </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Disable global spanning-tree mode for the device
         </DESCRIPTION>
        <USAGE>
             This command allows disabling the spanning-tree mode for the device.
         </USAGE>
        <EXAMPLE>
             sonic(config)#no spanning-tree mode
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree forward-time" access="netadmin" help="Reset forward time to default value" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_global_forwarding_delay
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Remove the spanning-tree forward delay time configuration
         </DESCRIPTION>
        <USAGE>
             This command allows resetting the forward delay time to default value
         </USAGE>
        <EXAMPLE>
             sonic(config)# no spanning-tree forward-time
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree guard" access="netadmin" help="Guard configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="root" help="Root guard options" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="timeout" help="Reset root guard timeout to default value" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_global_rootguard_timeout
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Remove the spanning-tree root guard timeout.
         </DESCRIPTION>
        <USAGE>
             This command allows resetting the root guard timeout value. 
         </USAGE>
        <EXAMPLE>
             sonic(config)# no spanning-tree guard root timeout
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree hello-time" access="netadmin" help="Reset hello time to default value" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_global_hello_time
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Remove the spanning-tree hello time configuration.
         </DESCRIPTION>
        <USAGE>
             This command allows resetting the hello interval configuration.
         </USAGE>
        <EXAMPLE>
             sonic(config)#no spanning-tree hello-time
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree max-age" access="netadmin" help="Reset max-age to default value" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_global_max_age
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Remove the spanning-tree max-age time value.
         </DESCRIPTION>
        <USAGE>
             This command allows resetting the max age configuration.
         </USAGE>
        <EXAMPLE>
             sonic(config)#no spanning-tree max-age
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree priority" access="netadmin" help="Reset bridge priority to default value" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_global_bridge_priority
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Remove the global level spanning-tree bridge priority value.
         </DESCRIPTION>
        <USAGE>
             This command allows resetting the bridge priority to default value
         </USAGE>
        <EXAMPLE>
             sonic(config)#no spanning-tree priority
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree loopguard" access="netadmin" help="Disable spanning tree loopguard" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="default" help="Disable loopguard by default on all ports" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_loop_guard False
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Disable spanning-tree loop guard configuration globally.
         </DESCRIPTION>
        <USAGE>
             This command allows to disable loop guard globally.
         </USAGE>
        <EXAMPLE>
             sonic(config)# no spanning-tree loopguard default 
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree portfast" access="netadmin" help="Disable spanning tree portfast" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="default" help="Disable portfast by default on all access ports" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_portfast False
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Disable spanning-tree portfast configuration globally.
         </DESCRIPTION>
        <USAGE>
             This command allows to disable portfast globally.
         </USAGE>
        <EXAMPLE>
             sonic(config)# no spanning-tree portfast default 
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree default-block" access="netadmin" help="Disable ports in block mode during init" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP/STP_INIT_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL" render_command_cb="spanning_tree_global_dfltblock" hidden="true">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_global_dfltblock False
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Unconfigure spanning-tree default blocking mode.
         </DESCRIPTION>
        <USAGE>
             This command allows to disable default blocking mode globally. When default blocking mode is disabled, ports are not added in STP blocked state during init" 
         </USAGE>
        <EXAMPLE>
             sonic(config)# no spanning-tree default-block
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree" access="netadmin" help="Enable spanning-tree configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN/STP_VLAN_LIST/name={vlan_name};sonic-spanning-tree:sonic-spanning-tree/STP/STP_LIST/keyleaf={keyleaf_val}" command_keys="keyleaf_val=GLOBAL;vlan_name=*" render_command_cb="spanning_tree_vlan">
      <PARAM name="vlan-range" help="Enable spanning-tree on a specific VLAN or a range of VLANS; for example, Vlan20,70-100,142" ptype="VLAN_INTERFACE_RANGE" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN/STP_VLAN_LIST/vlanid"> </PARAM>
      <PARAM name="stp-vlan-subcmds" help="Spanning tree subcommands" ptype="SUBCOMMAND" mode="switch" optional="true">
        <PARAM name="forward-time" help="Configure forward delay time" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="seconds" help="Forward delay time (sec)" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN/STP_VLAN_LIST/forward_delay" ptype="STP_FORWARD_DELAY"> </PARAM>
        </PARAM>
        <PARAM name="hello-time" help="Configure hello time" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="seconds" help="Hello time (sec)" ptype="STP_HELLO_TIME" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN/STP_VLAN_LIST/hello_time"> </PARAM>
        </PARAM>
        <PARAM name="max-age" help="Configure max-age time" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="seconds" help="Max-age time value (sec)" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN/STP_VLAN_LIST/max_age" ptype="STP_MAX_AGE"> </PARAM>
        </PARAM>
        <PARAM name="priority" help="Configure bridge priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Bridge priority value (multiples of 4096)" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN/STP_VLAN_LIST/priority" ptype="STP_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_vlan_subcmds ${stp-vlan-subcmds} ${vlan-range} ${seconds} ${value}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
             Configure spanning-tree parameters on per VLAN basis
         </DESCRIPTION>
        <USAGE>
             These commands are similar to the global level commands but allow configuring the spanning-tree parameters on per VLAN basis.
         </USAGE>
        <EXAMPLE>
             sonic(config)#spanning-tree vlan 100  
             sonic(config)#spanning-tree vlan 100 forward-time 11
             sonic(config)#spanning-tree vlan 100 hello-time 3
             sonic(config)#spanning-tree vlan 100 max-age 22 
             sonic(config)#spanning-tree vlan 100 priority 4096 
         </EXAMPLE>
      </DOCGEN>
    </COMMAND>
  </VIEW>
  <!-- Config interface mode -->
  <VIEW name="configure-if-view">
    <COMMAND name="no spanning-tree" access="netadmin" help="Spanning-tree configuration"> </COMMAND>
    <COMMAND name="no spanning-tree bpdufilter" access="netadmin" help="Disable BPDU filter on this interface and apply global bpdufilter" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_bpdu_filter ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure bpdufilter on a specific interface.
                </DESCRIPTION>
        <USAGE>
                    This command removes the interface specific BPDU filter configuration and applies the global BPDU filter configuration.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree bpdufilter
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree bpduguard" access="netadmin" help="Disable BPDU guard feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_bpdu_guard ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure bpduguard on a specific interface.
                </DESCRIPTION>
        <USAGE>
                    This command removes the interface specific BPDU guard configuration.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree bpduguard
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree cost" access="netadmin" help="Reset cost value to default" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_cost ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree cost on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the port level cost value
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree cost
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree enable" access="netadmin" help="Disable spanning-tree" ptype="SUBCOMMAND" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/enabled=false" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_enable ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables spanning-tree on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree enable
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree link-type" access="netadmin" help="Reset link type to default" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_link_type ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree link-type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the link-type configuration on an interface.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree link-type
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree portfast" access="netadmin" help="Disable portfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_portfast ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree portfast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables portfast on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree portfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree port-priority" access="netadmin" help="Reset the port priority" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_port_priority ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree port priority on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the port priority value on an interface to default value
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree port-priority
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree uplinkfast" access="netadmin" help="Disable uplinkfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_uplink_fast ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree uplink fast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables uplink fast feature on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree uplinkfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree port" access="netadmin" help="Port configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="type" help="Reset port type to default" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_edge_port ${iface} ${po_name} ${type} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unonfigure spanning-tree port type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables edge-port type configuration an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree port type
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree guard" access="netadmin" help="Unconfigure spanning tree guard on interface">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_guard ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Unconfigure guard root or loop on an interface.
              </DESCRIPTION>
        <USAGE>
                  This commands allows disabling guard root or loop on an interface
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# no spanning-tree guard
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree vlan" access="netadmin" help="VLAN specific configuration">
      <PARAM name="vlan-range" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142" ptype="VLAN_RANGE"> </PARAM>
      <PARAM name="stp-if-vlan-subcmds" help="Spanning tree interface subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Reset the pathcost to default" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="port-priority" help="Reset the port priority to default" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_vlan_subcmds ${stp-if-vlan-subcmds} ${vlan-range} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Unconfigure interface and vlan specific spanning-tree parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands removes interface and vlan specific spanning-tree parameters and sets to default value
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# no spanning-tree vlan 100 cost
                  sonic(conf-if-po1)# no spanning-tree vlan 100 port-priority
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst" access="netadmin" help="Unconfigures MST parameters">
      <PARAM name="inst-id" help="Instance id or range (1-4094)" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="stp-if-mst-subcmds" help="Spanning tree interface MST subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Unconfigures pathcost" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="port-priority" help="Unconfigures priority" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_mst_subcmds ${stp-if-mst-subcmds} ${inst-id} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                      Unconfigure port-priority and Pathcost to MST.
                  </DESCRIPTION>
        <USAGE>
                      This command allows unconfiguring the port-priority and pathcost to MST.
                  </USAGE>
        <EXAMPLE>
                      sonic(conf-if-Ethernet0)# no spanning-tree mst 1 port-priority
                      sonic(conf-if-Ethernet0)# no spanning-tree mst 1 cost
                  </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree" access="netadmin" help="Spanning-tree configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_intf"> </COMMAND>
    <COMMAND name="spanning-tree mst" access="netadmin" help="Configures MST parameters" command_keys="inst_id=*" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST_PORT/STP_MST_PORT_LIST/instance={inst_id},ifname={name};sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_mst_port">
      <PARAM name="inst-id" help="Instance id or range (1-4094)" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="stp-if-mst-subcmds" help="Spanning tree interface MST subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Configures pathcost" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Cost value" ptype="STP_COST"> </PARAM>
        </PARAM>
        <PARAM name="port-priority" help="Configures priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_mst_subcmds ${stp-if-mst-subcmds} ${inst-id} ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                      Configure port-priority and Pathcost to MST.
                  </DESCRIPTION>
        <USAGE>
                      This command allows configuring the port-priority and pathcost to MST.
                  </USAGE>
        <EXAMPLE>
                      sonic(conf-if-Ethernet0)# spanning-tree mst 1 port-priority 4096
                      sonic(conf-if-Ethernet0)# spanning-tree mst 1 cost 100 
                  </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree bpduguard" access="netadmin" help="Enable BPDU guard feature" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="port-shutdown" help="Enable port shutdown on bpdu guard violation" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_bpdu_guard ${iface} ${po_name} ${port-shutdown} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure interface specific bpdu-guard parameters.
                </DESCRIPTION>
        <USAGE>
                    This commands allows enabling bpdu-guard on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree bpduguard port-shutdown
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree cost" access="netadmin" help="Configure pathcost" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="value" help="Pathcost value" ptype="STP_COST"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_cost ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree cost on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows to configure the port level cost value, range 1 - 200000000
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree cost 1000
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree enable" access="netadmin" help="Enable spanning-tree" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_enable ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows enabling of spanning-tree on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree enable
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree link-type" access="netadmin" help="Configure link type of the interface" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="link-sub-cmds" help="Link type sub commands." ptype="SUBCOMMAND" mode="switch">
        <PARAM name="point-to-point" help="Link type of this interface is point-to-point" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="shared" help="Link type of this interface is shared" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_link_type ${iface} ${po_name} ${link-sub-cmds} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree link-type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting the link-type of spanning-tree on an interface, link-type can be set to either point-point or shared.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree link-type point-to-point
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree portfast" access="netadmin" help="Enable portfast feature" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/portfast=true">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_portfast ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree portfast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows enabling portfast on an interface, portfast allows edge ports to move to forwarding state quickly when the connected device is not participating in spanning-tree.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree portfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree port-priority" access="netadmin" help="Configure port priority" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="value" help="Port priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_port_priority ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree port priority on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting port priority value on an interface, range 0 - 240 (default 128)
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree port-priority 16
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree port" access="netadmin" help="Port configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="type" help="Configure port type" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="edge" help="Edge port" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_edge_port ${iface} ${po_name} ${edge} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree port type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting edge-port type to an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree port type edge
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree uplinkfast" access="netadmin" help="Enable uplinkfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_uplink_fast ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree uplink fast on an interface.
                </DESCRIPTION>
        <USAGE>
                    Uplink fast feature enhances STP performance for switches with redundant uplinks. Using the default value for the standard STP forward delay,
                    convergence following a transition from an active link to a redundant link can take 30 seconds (15 seconds for listening and an
                    additional 15 seconds for learning).
      
                    When uplink fast is configured on the redundant uplinks, it reduces the convergence time to just one second by moving to forwarding
                    state (bypassing listening and learning modes) in just once second when the active link goes down.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree uplinkfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree bpdufilter" access="netadmin" help="BPDU filter configuration">
      <PARAM name="bpdufilt_sub_cmds" help="Spanning-tree BPDU filter subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="enable" help="Enable BPDU filter on this interface" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="disable" help="Disable BPDU filter on this interface" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_bpdu_filter ${bpdufilt_sub_cmds} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface specific bpdu-filter parameters.
              </DESCRIPTION>
        <USAGE>
                  These commands allow configuring interface specific bpdu-filter parameters
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree bpdufilter enable
                  sonic(conf-if-po1)# spanning-tree bpdufilter disable
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree guard" access="netadmin" help="Configure spanning-tree guard on port-channel interface" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_intf_guard">
      <PARAM name="guard" help="Configure spanning-tree guard mode on port-channel interface" ptype="STP_GUARD_TYPE"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_guard ${iface} ${po_name} ${guard} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface specific guard parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands allows enabling guard on an interface
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree guard root
                  sonic(conf-if-po1)# spanning-tree guard loop
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree vlan" access="netadmin" help="VLAN specific configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN_PORT/STP_VLAN_PORT_LIST/vlan-name={vname_val},ifname={name};sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" command_keys="vname_val=*" render_command_cb="spanning_tree_intf_vlan">
      <PARAM name="vlan-range" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142" ptype="VLAN_RANGE"> </PARAM>
      <PARAM name="stp-if-vlan-subcmds" help="Spanning tree interface VLAN subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Configures pathcost" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Cost value" ptype="STP_COST"> </PARAM>
        </PARAM>
        <PARAM name="port-priority" help="Configure priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_vlan_subcmds ${stp-if-vlan-subcmds} ${vlan-range} ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface and vlan specific spanning-tree parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands allows configuring interface and vlan specific spanning-tree parameters.
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree vlan 100 cost 1000
                  sonic(conf-if-po1)# spanning-tree vlan 100 port-priority 16
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
  </VIEW>
  <!-- Config interface range mode -->
  <VIEW name="configure-if-range-view">
    <COMMAND name="no spanning-tree" access="netadmin" help="Spanning-tree configuration"> </COMMAND>
    <COMMAND name="no spanning-tree bpdufilter" access="netadmin" help="Disable BPDU filter on this interface and apply global bpdufilter" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_bpdu_filter ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure bpdufilter on a specific interface.
                </DESCRIPTION>
        <USAGE>
                    This command removes the interface specific BPDU filter configuration and applies the global BPDU filter configuration.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree bpdufilter
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree bpduguard" access="netadmin" help="Disable BPDU guard feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_bpdu_guard ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure bpduguard on a specific interface.
                </DESCRIPTION>
        <USAGE>
                    This command removes the interface specific BPDU guard configuration.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree bpduguard
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree cost" access="netadmin" help="Reset cost value to default" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_cost ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree cost on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the port level cost value
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree cost
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree enable" access="netadmin" help="Disable spanning-tree" ptype="SUBCOMMAND" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/enabled=false" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_enable ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables spanning-tree on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree enable
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree link-type" access="netadmin" help="Reset link type to default" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_link_type ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree link-type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the link-type configuration on an interface.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree link-type
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree portfast" access="netadmin" help="Disable portfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_portfast ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree portfast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables portfast on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree portfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree port-priority" access="netadmin" help="Reset the port priority" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_port_priority ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree port priority on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the port priority value on an interface to default value
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree port-priority
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree uplinkfast" access="netadmin" help="Disable uplinkfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_uplink_fast ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree uplink fast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables uplink fast feature on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree uplinkfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree port" access="netadmin" help="Port configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="type" help="Reset port type to default" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_edge_port ${iface} ${po_name} ${type} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unonfigure spanning-tree port type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables edge-port type configuration an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree port type
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree guard" access="netadmin" help="Unconfigure spanning tree guard on interface">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_guard ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Unconfigure guard root or loop on an interface.
              </DESCRIPTION>
        <USAGE>
                  This commands allows disabling guard root or loop on an interface
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# no spanning-tree guard
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree vlan" access="netadmin" help="VLAN specific configuration">
      <PARAM name="vlan-range" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142" ptype="VLAN_RANGE"> </PARAM>
      <PARAM name="stp-if-vlan-subcmds" help="Spanning tree interface subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Reset the pathcost to default" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="port-priority" help="Reset the port priority to default" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_vlan_subcmds ${stp-if-vlan-subcmds} ${vlan-range} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Unconfigure interface and vlan specific spanning-tree parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands removes interface and vlan specific spanning-tree parameters and sets to default value
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# no spanning-tree vlan 100 cost
                  sonic(conf-if-po1)# no spanning-tree vlan 100 port-priority
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst" access="netadmin" help="Unconfigures MST parameters">
      <PARAM name="inst-id" help="Instance id or range (1-4094)" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="stp-if-mst-subcmds" help="Spanning tree interface MST subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Unconfigures pathcost" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="port-priority" help="Unconfigures priority" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_mst_subcmds ${stp-if-mst-subcmds} ${inst-id} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                      Unconfigure port-priority and Pathcost to MST.
                  </DESCRIPTION>
        <USAGE>
                      This command allows unconfiguring the port-priority and pathcost to MST.
                  </USAGE>
        <EXAMPLE>
                      sonic(conf-if-Ethernet0)# no spanning-tree mst 1 port-priority
                      sonic(conf-if-Ethernet0)# no spanning-tree mst 1 cost
                  </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree" access="netadmin" help="Spanning-tree configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_intf"> </COMMAND>
    <COMMAND name="spanning-tree mst" access="netadmin" help="Configures MST parameters" command_keys="inst_id=*" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST_PORT/STP_MST_PORT_LIST/instance={inst_id},ifname={name};sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_mst_port">
      <PARAM name="inst-id" help="Instance id or range (1-4094)" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="stp-if-mst-subcmds" help="Spanning tree interface MST subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Configures pathcost" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Cost value" ptype="STP_COST"> </PARAM>
        </PARAM>
        <PARAM name="port-priority" help="Configures priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_mst_subcmds ${stp-if-mst-subcmds} ${inst-id} ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                      Configure port-priority and Pathcost to MST.
                  </DESCRIPTION>
        <USAGE>
                      This command allows configuring the port-priority and pathcost to MST.
                  </USAGE>
        <EXAMPLE>
                      sonic(conf-if-Ethernet0)# spanning-tree mst 1 port-priority 4096
                      sonic(conf-if-Ethernet0)# spanning-tree mst 1 cost 100 
                  </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree bpduguard" access="netadmin" help="Enable BPDU guard feature" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="port-shutdown" help="Enable port shutdown on bpdu guard violation" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_bpdu_guard ${iface} ${po_name} ${port-shutdown} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure interface specific bpdu-guard parameters.
                </DESCRIPTION>
        <USAGE>
                    This commands allows enabling bpdu-guard on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree bpduguard port-shutdown
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree cost" access="netadmin" help="Configure pathcost" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="value" help="Pathcost value" ptype="STP_COST"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_cost ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree cost on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows to configure the port level cost value, range 1 - 200000000
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree cost 1000
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree enable" access="netadmin" help="Enable spanning-tree" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_enable ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows enabling of spanning-tree on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree enable
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree link-type" access="netadmin" help="Configure link type of the interface" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="link-sub-cmds" help="Link type sub commands." ptype="SUBCOMMAND" mode="switch">
        <PARAM name="point-to-point" help="Link type of this interface is point-to-point" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="shared" help="Link type of this interface is shared" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_link_type ${iface} ${po_name} ${link-sub-cmds} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree link-type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting the link-type of spanning-tree on an interface, link-type can be set to either point-point or shared.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree link-type point-to-point
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree portfast" access="netadmin" help="Enable portfast feature" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/portfast=true">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_portfast ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree portfast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows enabling portfast on an interface, portfast allows edge ports to move to forwarding state quickly when the connected device is not participating in spanning-tree.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree portfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree port-priority" access="netadmin" help="Configure port priority" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="value" help="Port priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_port_priority ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree port priority on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting port priority value on an interface, range 0 - 240 (default 128)
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree port-priority 16
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree port" access="netadmin" help="Port configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="type" help="Configure port type" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="edge" help="Edge port" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_edge_port ${iface} ${po_name} ${edge} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree port type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting edge-port type to an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree port type edge
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree uplinkfast" access="netadmin" help="Enable uplinkfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_uplink_fast ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree uplink fast on an interface.
                </DESCRIPTION>
        <USAGE>
                    Uplink fast feature enhances STP performance for switches with redundant uplinks. Using the default value for the standard STP forward delay,
                    convergence following a transition from an active link to a redundant link can take 30 seconds (15 seconds for listening and an
                    additional 15 seconds for learning).
      
                    When uplink fast is configured on the redundant uplinks, it reduces the convergence time to just one second by moving to forwarding
                    state (bypassing listening and learning modes) in just once second when the active link goes down.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree uplinkfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree bpdufilter" access="netadmin" help="BPDU filter configuration">
      <PARAM name="bpdufilt_sub_cmds" help="Spanning-tree BPDU filter subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="enable" help="Enable BPDU filter on this interface" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="disable" help="Disable BPDU filter on this interface" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_bpdu_filter ${bpdufilt_sub_cmds} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface specific bpdu-filter parameters.
              </DESCRIPTION>
        <USAGE>
                  These commands allow configuring interface specific bpdu-filter parameters
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree bpdufilter enable
                  sonic(conf-if-po1)# spanning-tree bpdufilter disable
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree guard" access="netadmin" help="Configure spanning-tree guard on port-channel interface" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_intf_guard">
      <PARAM name="guard" help="Configure spanning-tree guard mode on port-channel interface" ptype="STP_GUARD_TYPE"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_guard ${iface} ${po_name} ${guard} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface specific guard parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands allows enabling guard on an interface
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree guard root
                  sonic(conf-if-po1)# spanning-tree guard loop
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree vlan" access="netadmin" help="VLAN specific configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN_PORT/STP_VLAN_PORT_LIST/vlan-name={vname_val},ifname={name};sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" command_keys="vname_val=*" render_command_cb="spanning_tree_intf_vlan">
      <PARAM name="vlan-range" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142" ptype="VLAN_RANGE"> </PARAM>
      <PARAM name="stp-if-vlan-subcmds" help="Spanning tree interface VLAN subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Configures pathcost" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Cost value" ptype="STP_COST"> </PARAM>
        </PARAM>
        <PARAM name="port-priority" help="Configure priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_vlan_subcmds ${stp-if-vlan-subcmds} ${vlan-range} ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface and vlan specific spanning-tree parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands allows configuring interface and vlan specific spanning-tree parameters.
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree vlan 100 cost 1000
                  sonic(conf-if-po1)# spanning-tree vlan 100 port-priority 16
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
  </VIEW>
  <!-- Config lag mode -->
  <VIEW name="configure-lag-view">
    <COMMAND name="no spanning-tree" access="netadmin" help="Spanning-tree configuration"> </COMMAND>
    <COMMAND name="no spanning-tree bpdufilter" access="netadmin" help="Disable BPDU filter on this interface and apply global bpdufilter" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_bpdu_filter ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure bpdufilter on a specific interface.
                </DESCRIPTION>
        <USAGE>
                    This command removes the interface specific BPDU filter configuration and applies the global BPDU filter configuration.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree bpdufilter
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree bpduguard" access="netadmin" help="Disable BPDU guard feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_bpdu_guard ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure bpduguard on a specific interface.
                </DESCRIPTION>
        <USAGE>
                    This command removes the interface specific BPDU guard configuration.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree bpduguard
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree cost" access="netadmin" help="Reset cost value to default" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_cost ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree cost on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the port level cost value
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree cost
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree enable" access="netadmin" help="Disable spanning-tree" ptype="SUBCOMMAND" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/enabled=false" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_enable ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables spanning-tree on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree enable
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree link-type" access="netadmin" help="Reset link type to default" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_link_type ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree link-type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the link-type configuration on an interface.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree link-type
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree portfast" access="netadmin" help="Disable portfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_portfast ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree portfast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables portfast on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree portfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree port-priority" access="netadmin" help="Reset the port priority" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_port_priority ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree port priority on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the port priority value on an interface to default value
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree port-priority
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree uplinkfast" access="netadmin" help="Disable uplinkfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_uplink_fast ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree uplink fast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables uplink fast feature on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree uplinkfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree port" access="netadmin" help="Port configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="type" help="Reset port type to default" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_edge_port ${iface} ${po_name} ${type} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unonfigure spanning-tree port type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables edge-port type configuration an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree port type
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree guard" access="netadmin" help="Unconfigure spanning tree guard on interface">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_guard ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Unconfigure guard root or loop on an interface.
              </DESCRIPTION>
        <USAGE>
                  This commands allows disabling guard root or loop on an interface
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# no spanning-tree guard
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree vlan" access="netadmin" help="VLAN specific configuration">
      <PARAM name="vlan-range" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142" ptype="VLAN_RANGE"> </PARAM>
      <PARAM name="stp-if-vlan-subcmds" help="Spanning tree interface subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Reset the pathcost to default" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="port-priority" help="Reset the port priority to default" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_vlan_subcmds ${stp-if-vlan-subcmds} ${vlan-range} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Unconfigure interface and vlan specific spanning-tree parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands removes interface and vlan specific spanning-tree parameters and sets to default value
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# no spanning-tree vlan 100 cost
                  sonic(conf-if-po1)# no spanning-tree vlan 100 port-priority
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst" access="netadmin" help="Unconfigures MST parameters">
      <PARAM name="inst-id" help="Instance id or range (1-4094)" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="stp-if-mst-subcmds" help="Spanning tree interface MST subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Unconfigures pathcost" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="port-priority" help="Unconfigures priority" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_mst_subcmds ${stp-if-mst-subcmds} ${inst-id} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                      Unconfigure port-priority and Pathcost to MST.
                  </DESCRIPTION>
        <USAGE>
                      This command allows unconfiguring the port-priority and pathcost to MST.
                  </USAGE>
        <EXAMPLE>
                      sonic(conf-if-Ethernet0)# no spanning-tree mst 1 port-priority
                      sonic(conf-if-Ethernet0)# no spanning-tree mst 1 cost
                  </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree" access="netadmin" help="Spanning-tree configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_intf"> </COMMAND>
    <COMMAND name="spanning-tree mst" access="netadmin" help="Configures MST parameters" command_keys="inst_id=*" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST_PORT/STP_MST_PORT_LIST/instance={inst_id},ifname={name};sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_mst_port">
      <PARAM name="inst-id" help="Instance id or range (1-4094)" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="stp-if-mst-subcmds" help="Spanning tree interface MST subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Configures pathcost" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Cost value" ptype="STP_COST"> </PARAM>
        </PARAM>
        <PARAM name="port-priority" help="Configures priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_mst_subcmds ${stp-if-mst-subcmds} ${inst-id} ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                      Configure port-priority and Pathcost to MST.
                  </DESCRIPTION>
        <USAGE>
                      This command allows configuring the port-priority and pathcost to MST.
                  </USAGE>
        <EXAMPLE>
                      sonic(conf-if-Ethernet0)# spanning-tree mst 1 port-priority 4096
                      sonic(conf-if-Ethernet0)# spanning-tree mst 1 cost 100 
                  </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree bpduguard" access="netadmin" help="Enable BPDU guard feature" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="port-shutdown" help="Enable port shutdown on bpdu guard violation" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_bpdu_guard ${iface} ${po_name} ${port-shutdown} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure interface specific bpdu-guard parameters.
                </DESCRIPTION>
        <USAGE>
                    This commands allows enabling bpdu-guard on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree bpduguard port-shutdown
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree cost" access="netadmin" help="Configure pathcost" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="value" help="Pathcost value" ptype="STP_COST"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_cost ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree cost on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows to configure the port level cost value, range 1 - 200000000
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree cost 1000
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree enable" access="netadmin" help="Enable spanning-tree" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_enable ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows enabling of spanning-tree on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree enable
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree link-type" access="netadmin" help="Configure link type of the interface" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="link-sub-cmds" help="Link type sub commands." ptype="SUBCOMMAND" mode="switch">
        <PARAM name="point-to-point" help="Link type of this interface is point-to-point" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="shared" help="Link type of this interface is shared" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_link_type ${iface} ${po_name} ${link-sub-cmds} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree link-type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting the link-type of spanning-tree on an interface, link-type can be set to either point-point or shared.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree link-type point-to-point
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree portfast" access="netadmin" help="Enable portfast feature" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/portfast=true">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_portfast ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree portfast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows enabling portfast on an interface, portfast allows edge ports to move to forwarding state quickly when the connected device is not participating in spanning-tree.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree portfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree port-priority" access="netadmin" help="Configure port priority" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="value" help="Port priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_port_priority ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree port priority on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting port priority value on an interface, range 0 - 240 (default 128)
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree port-priority 16
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree port" access="netadmin" help="Port configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="type" help="Configure port type" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="edge" help="Edge port" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_edge_port ${iface} ${po_name} ${edge} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree port type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting edge-port type to an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree port type edge
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree uplinkfast" access="netadmin" help="Enable uplinkfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_uplink_fast ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree uplink fast on an interface.
                </DESCRIPTION>
        <USAGE>
                    Uplink fast feature enhances STP performance for switches with redundant uplinks. Using the default value for the standard STP forward delay,
                    convergence following a transition from an active link to a redundant link can take 30 seconds (15 seconds for listening and an
                    additional 15 seconds for learning).
      
                    When uplink fast is configured on the redundant uplinks, it reduces the convergence time to just one second by moving to forwarding
                    state (bypassing listening and learning modes) in just once second when the active link goes down.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree uplinkfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree bpdufilter" access="netadmin" help="BPDU filter configuration">
      <PARAM name="bpdufilt_sub_cmds" help="Spanning-tree BPDU filter subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="enable" help="Enable BPDU filter on this interface" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="disable" help="Disable BPDU filter on this interface" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_bpdu_filter ${bpdufilt_sub_cmds} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface specific bpdu-filter parameters.
              </DESCRIPTION>
        <USAGE>
                  These commands allow configuring interface specific bpdu-filter parameters
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree bpdufilter enable
                  sonic(conf-if-po1)# spanning-tree bpdufilter disable
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree guard" access="netadmin" help="Configure spanning-tree guard on port-channel interface" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_intf_guard">
      <PARAM name="guard" help="Configure spanning-tree guard mode on port-channel interface" ptype="STP_GUARD_TYPE"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_guard ${iface} ${po_name} ${guard} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface specific guard parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands allows enabling guard on an interface
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree guard root
                  sonic(conf-if-po1)# spanning-tree guard loop
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree vlan" access="netadmin" help="VLAN specific configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN_PORT/STP_VLAN_PORT_LIST/vlan-name={vname_val},ifname={name};sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" command_keys="vname_val=*" render_command_cb="spanning_tree_intf_vlan">
      <PARAM name="vlan-range" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142" ptype="VLAN_RANGE"> </PARAM>
      <PARAM name="stp-if-vlan-subcmds" help="Spanning tree interface VLAN subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Configures pathcost" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Cost value" ptype="STP_COST"> </PARAM>
        </PARAM>
        <PARAM name="port-priority" help="Configure priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_vlan_subcmds ${stp-if-vlan-subcmds} ${vlan-range} ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface and vlan specific spanning-tree parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands allows configuring interface and vlan specific spanning-tree parameters.
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree vlan 100 cost 1000
                  sonic(conf-if-po1)# spanning-tree vlan 100 port-priority 16
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
  </VIEW>
  <!-- Config lag range mode -->
  <VIEW name="configure-po-range-view">
    <COMMAND name="no spanning-tree" access="netadmin" help="Spanning-tree configuration"> </COMMAND>
    <COMMAND name="no spanning-tree bpdufilter" access="netadmin" help="Disable BPDU filter on this interface and apply global bpdufilter" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_bpdu_filter ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure bpdufilter on a specific interface.
                </DESCRIPTION>
        <USAGE>
                    This command removes the interface specific BPDU filter configuration and applies the global BPDU filter configuration.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree bpdufilter
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree bpduguard" access="netadmin" help="Disable BPDU guard feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_bpdu_guard ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure bpduguard on a specific interface.
                </DESCRIPTION>
        <USAGE>
                    This command removes the interface specific BPDU guard configuration.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree bpduguard
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree cost" access="netadmin" help="Reset cost value to default" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_cost ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree cost on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the port level cost value
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree cost
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree enable" access="netadmin" help="Disable spanning-tree" ptype="SUBCOMMAND" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/enabled=false" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_enable ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables spanning-tree on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree enable
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree link-type" access="netadmin" help="Reset link type to default" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_link_type ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree link-type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the link-type configuration on an interface.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree link-type
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree portfast" access="netadmin" help="Disable portfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_portfast ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree portfast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables portfast on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree portfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree port-priority" access="netadmin" help="Reset the port priority" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_port_priority ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree port priority on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command resets the port priority value on an interface to default value
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree port-priority
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree uplinkfast" access="netadmin" help="Disable uplinkfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_uplink_fast ${iface} ${po_name} False </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unconfigure spanning-tree uplink fast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables uplink fast feature on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree uplinkfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree port" access="netadmin" help="Port configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="type" help="Reset port type to default" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_edge_port ${iface} ${po_name} ${type} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Unonfigure spanning-tree port type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command disables edge-port type configuration an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# no spanning-tree port type
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree guard" access="netadmin" help="Unconfigure spanning tree guard on interface">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_guard ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Unconfigure guard root or loop on an interface.
              </DESCRIPTION>
        <USAGE>
                  This commands allows disabling guard root or loop on an interface
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# no spanning-tree guard
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree vlan" access="netadmin" help="VLAN specific configuration">
      <PARAM name="vlan-range" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142" ptype="VLAN_RANGE"> </PARAM>
      <PARAM name="stp-if-vlan-subcmds" help="Spanning tree interface subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Reset the pathcost to default" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="port-priority" help="Reset the port priority to default" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_vlan_subcmds ${stp-if-vlan-subcmds} ${vlan-range} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Unconfigure interface and vlan specific spanning-tree parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands removes interface and vlan specific spanning-tree parameters and sets to default value
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# no spanning-tree vlan 100 cost
                  sonic(conf-if-po1)# no spanning-tree vlan 100 port-priority
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no spanning-tree mst" access="netadmin" help="Unconfigures MST parameters">
      <PARAM name="inst-id" help="Instance id or range (1-4094)" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="stp-if-mst-subcmds" help="Spanning tree interface MST subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Unconfigures pathcost" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="port-priority" help="Unconfigures priority" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_intf_mst_subcmds ${stp-if-mst-subcmds} ${inst-id} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                      Unconfigure port-priority and Pathcost to MST.
                  </DESCRIPTION>
        <USAGE>
                      This command allows unconfiguring the port-priority and pathcost to MST.
                  </USAGE>
        <EXAMPLE>
                      sonic(conf-if-Ethernet0)# no spanning-tree mst 1 port-priority
                      sonic(conf-if-Ethernet0)# no spanning-tree mst 1 cost
                  </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree" access="netadmin" help="Spanning-tree configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_intf"> </COMMAND>
    <COMMAND name="spanning-tree mst" access="netadmin" help="Configures MST parameters" command_keys="inst_id=*" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST_PORT/STP_MST_PORT_LIST/instance={inst_id},ifname={name};sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_mst_port">
      <PARAM name="inst-id" help="Instance id or range (1-4094)" ptype="STP_MST_INST_RANGE"> </PARAM>
      <PARAM name="stp-if-mst-subcmds" help="Spanning tree interface MST subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Configures pathcost" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Cost value" ptype="STP_COST"> </PARAM>
        </PARAM>
        <PARAM name="port-priority" help="Configures priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_mst_subcmds ${stp-if-mst-subcmds} ${inst-id} ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                      Configure port-priority and Pathcost to MST.
                  </DESCRIPTION>
        <USAGE>
                      This command allows configuring the port-priority and pathcost to MST.
                  </USAGE>
        <EXAMPLE>
                      sonic(conf-if-Ethernet0)# spanning-tree mst 1 port-priority 4096
                      sonic(conf-if-Ethernet0)# spanning-tree mst 1 cost 100 
                  </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree bpduguard" access="netadmin" help="Enable BPDU guard feature" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="port-shutdown" help="Enable port shutdown on bpdu guard violation" ptype="SUBCOMMAND" mode="subcommand" optional="true"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_bpdu_guard ${iface} ${po_name} ${port-shutdown} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure interface specific bpdu-guard parameters.
                </DESCRIPTION>
        <USAGE>
                    This commands allows enabling bpdu-guard on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree bpduguard port-shutdown
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree cost" access="netadmin" help="Configure pathcost" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="value" help="Pathcost value" ptype="STP_COST"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_cost ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree cost on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows to configure the port level cost value, range 1 - 200000000
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree cost 1000
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree enable" access="netadmin" help="Enable spanning-tree" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_enable ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows enabling of spanning-tree on an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree enable
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree link-type" access="netadmin" help="Configure link type of the interface" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="link-sub-cmds" help="Link type sub commands." ptype="SUBCOMMAND" mode="switch">
        <PARAM name="point-to-point" help="Link type of this interface is point-to-point" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="shared" help="Link type of this interface is shared" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_link_type ${iface} ${po_name} ${link-sub-cmds} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree link-type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting the link-type of spanning-tree on an interface, link-type can be set to either point-point or shared.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree link-type point-to-point
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree portfast" access="netadmin" help="Enable portfast feature" ptype="SUBCOMMAND" mode="subcommand" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/portfast=true">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_portfast ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree portfast on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows enabling portfast on an interface, portfast allows edge ports to move to forwarding state quickly when the connected device is not participating in spanning-tree.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree portfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree port-priority" access="netadmin" help="Configure port priority" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="value" help="Port priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_port_priority ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree port priority on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting port priority value on an interface, range 0 - 240 (default 128)
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree port-priority 16
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree port" access="netadmin" help="Port configuration" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="type" help="Configure port type" ptype="SUBCOMMAND" mode="subcommand">
        <PARAM name="edge" help="Edge port" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_edge_port ${iface} ${po_name} ${edge} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree port type on an interface.
                </DESCRIPTION>
        <USAGE>
                    This command allows setting edge-port type to an interface
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree port type edge
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree uplinkfast" access="netadmin" help="Enable uplinkfast feature" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_uplink_fast ${iface} ${po_name} True </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                    Configure spanning-tree uplink fast on an interface.
                </DESCRIPTION>
        <USAGE>
                    Uplink fast feature enhances STP performance for switches with redundant uplinks. Using the default value for the standard STP forward delay,
                    convergence following a transition from an active link to a redundant link can take 30 seconds (15 seconds for listening and an
                    additional 15 seconds for learning).
      
                    When uplink fast is configured on the redundant uplinks, it reduces the convergence time to just one second by moving to forwarding
                    state (bypassing listening and learning modes) in just once second when the active link goes down.
                </USAGE>
        <EXAMPLE>
                    sonic(config)# interface PortChannel 1
                    sonic(conf-if-po1)# spanning-tree uplinkfast
                </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree bpdufilter" access="netadmin" help="BPDU filter configuration">
      <PARAM name="bpdufilt_sub_cmds" help="Spanning-tree BPDU filter subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="enable" help="Enable BPDU filter on this interface" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
        <PARAM name="disable" help="Disable BPDU filter on this interface" ptype="SUBCOMMAND" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_bpdu_filter ${bpdufilt_sub_cmds} ${iface} ${po_name} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface specific bpdu-filter parameters.
              </DESCRIPTION>
        <USAGE>
                  These commands allow configuring interface specific bpdu-filter parameters
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree bpdufilter enable
                  sonic(conf-if-po1)# spanning-tree bpdufilter disable
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree guard" access="netadmin" help="Configure spanning-tree guard on port-channel interface" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" render_command_cb="spanning_tree_intf_guard">
      <PARAM name="guard" help="Configure spanning-tree guard mode on port-channel interface" ptype="STP_GUARD_TYPE"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_guard ${iface} ${po_name} ${guard} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface specific guard parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands allows enabling guard on an interface
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree guard root
                  sonic(conf-if-po1)# spanning-tree guard loop
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="spanning-tree vlan" access="netadmin" help="VLAN specific configuration" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_VLAN_PORT/STP_VLAN_PORT_LIST/vlan-name={vname_val},ifname={name};sonic-spanning-tree:sonic-spanning-tree/STP_PORT/STP_PORT_LIST/ifname={name}" command_keys="vname_val=*" render_command_cb="spanning_tree_intf_vlan">
      <PARAM name="vlan-range" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, 20,70-100,142" ptype="VLAN_RANGE"> </PARAM>
      <PARAM name="stp-if-vlan-subcmds" help="Spanning tree interface VLAN subcommands" ptype="SUBCOMMAND" mode="switch">
        <PARAM name="cost" help="Configures pathcost" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Cost value" ptype="STP_COST"> </PARAM>
        </PARAM>
        <PARAM name="port-priority" help="Configure priority" ptype="SUBCOMMAND" mode="subcommand">
          <PARAM name="value" help="Priority value" ptype="STP_PORT_PRIORITY"> </PARAM>
        </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_intf_vlan_subcmds ${stp-if-vlan-subcmds} ${vlan-range} ${iface} ${po_name} ${value} </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                  Configure interface and vlan specific spanning-tree parameters.
              </DESCRIPTION>
        <USAGE>
                  This commands allows configuring interface and vlan specific spanning-tree parameters.
              </USAGE>
        <EXAMPLE>
                  sonic(config)# interface PortChannel 1
                  sonic(conf-if-po1)# spanning-tree vlan 100 cost 1000
                  sonic(conf-if-po1)# spanning-tree vlan 100 port-priority 16
              </EXAMPLE>
      </DOCGEN>
    </COMMAND>
  </VIEW>
  <!-- Config MST view -->
  <VIEW name="configure-mst-view" prompt="${SYSTEM_NAME}(${__config_mode}-mst)# " depth="2">
    <NAMESPACE ref="hidden-view" help="false" completion="false"/>
    <NAMESPACE ref="enable-view" help="false" completion="false"/>
    <NAMESPACE ref="enable-view" help="true" prefix="do" completion="true"/>
    <COMMAND name="exit" help="Exit from current mode" lock="false">
            	  <ACTION builtin="clish_nested_up"/>
  </COMMAND>
    <COMMAND name="end" help="Exit to EXEC mode" view="enable-view">
                 <ACTION builtin="clish_exit_session"/>
             </COMMAND>
    <!-- Inheritance -->
    <NAMESPACE ref="configure-view" help="false" completion="false"/>
    <COMMAND name="show configuration" access="netadmin" help="show spanning-tree mst running configuration">
      <ACTION builtin="clish_pyobj">sonic_cli_show_config show_view views=configure-mst</ACTION>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="name" access="netadmin" help="Configures region name" ptype="SUBCOMMAND" mode="subcommand" command_keys="keyleaf_val=GLOBAL" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/keyleaf={keyleaf_val}">
      <PARAM name="mst-name" help="String" ptype="STRING_32" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/name"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_config name mstname=${mst-name}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Configure the name for MST region.
             </DESCRIPTION>
        <USAGE>
                 This command allows to configure the region name for the MST.
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# name Region1 
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="revision" access="netadmin" help="Configures revision number" ptype="SUBCOMMAND" mode="subcommand" command_keys="keyleaf_val=GLOBAL" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/keyleaf={keyleaf_val}">
      <PARAM name="mst-revision" help="Revision number" ptype="STP_MST_REVISION" dbpath="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/revision"> </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_config revision ${mst-revision}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Configure the revision number for the MST region.
             </DESCRIPTION>
        <USAGE>
                 This command allows to configure the revision number for the MST.
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# revision 10 
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="instance" access="netadmin" help="Configures VLANs to an MST instance" ptype="SUBCOMMAND" mode="subcommand" command_keys="inst_id=*" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST_INST/STP_MST_INST_LIST/instance={inst_id}" render_command_cb="spanning_tree_mst_inst_config">
      <PARAM name="inst-id" help="MST instance id" ptype="STP_MST_INSTANCE_0">
        <PARAM name="vlan-id" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, Vlan20,70-100,142" ptype="VLAN_INTERFACE_RANGE" mode="subcommand"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_config instance ${inst-id} ${vlan-id}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Configure VLANs to an MST instance.
             </DESCRIPTION>
        <USAGE>
                 This command allows to assigning VLANs to an MST instance. 
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# instance 1 vlan 100
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="activate" access="netadmin" help="Commits all the MST configuration changes" ptype="SUBCOMMAND" mode="subcommand" command_keys="keyleaf_val=GLOBAL, inst_id=*" command_tables="sonic-spanning-tree:sonic-spanning-tree/STP_MST/STP_MST_LIST/keyleaf={keyleaf_val};sonic-spanning-tree:sonic-spanning-tree/STP_MST_INST/STP_MST_INST_LIST/instance={inst_id}" render_command_cb="spanning_tree_mst_activate">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_config_activate
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Commits all the MST configuration changes.
             </DESCRIPTION>
        <USAGE>
                 This command allows to activate the configuration under the MST configuration mode.
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# activate 
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="abort" access="netadmin" help="Aborts all the MST configuration changes" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp set_stp_mst_config_abort
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Aborts all the MST configuration changes.
             </DESCRIPTION>
        <USAGE>
                 This command allows to abort the pending configurations that are not yet activated under the MST configuration mode.
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# abort 
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="show current" access="netadmin" help="Shows current MST configuration" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp show_stp_mst_config show_stp_mst_config.j2 "current"
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Shows MST activated configuration
             </DESCRIPTION>
        <USAGE>
                 This command shows configurations that are activated under the MST configuration mode.
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# show current 
                 Current MST Configuration
                 Name      [test]
                 Revision  10    Instances configured 4
                 Instance  Vlans mapped
                 -----------------------------------------------------------
                 0          1-9,11-19,21-4093
                 1          10
                 2          20
                 4094       4094
                 -----------------------------------------------------------
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="show pending" access="netadmin" help="Shows pending MST configuration" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp show_stp_mst_config_pending show_stp_mst_config.j2
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Shows MST configuration that are not yet activated
             </DESCRIPTION>
        <USAGE>
                 This command shows pending configurations that are not yet activated under the MST configuration mode.
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# show pending 
                 Pending MST Configuration
                 Name      [test]
                 Revision  10    Instances configured 4
                 Instance  Vlans mapped
                 -----------------------------------------------------------
                 0          1-9,11-19,21-4093
                 1          10
                 2          20
                 4094       4094
                 -----------------------------------------------------------
                 sonic-cli(config-mst)#
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
      <xi:include href="include/pipe.xml"/>
    </COMMAND>
    <COMMAND name="no name" access="netadmin" help="Unconfigures region name" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_config name
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Unconfigure the name for MST region.
             </DESCRIPTION>
        <USAGE>
                 This command allows to unconfigure the region name for the MST.
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# no name
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no revision" access="netadmin" help="Unconfigures revision number" ptype="SUBCOMMAND" mode="subcommand">
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_config revision
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Unconfigure the revision number for the MST region.
             </DESCRIPTION>
        <USAGE>
                 This command allows to unconfigure the revision number for the MST.
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# no revision
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
    </COMMAND>
    <COMMAND name="no instance" access="netadmin" help="Unconfigures VLANs to an MST instance" ptype="SUBCOMMAND" mode="subcommand">
      <PARAM name="inst-id" help="MST instance id" ptype="STP_MST_INSTANCE">
        <PARAM name="vlan-id" help="(-) or (,) separated individual VLAN IDs and ranges of VLAN IDs; for example, Vlan20,70-100,142" ptype="VLAN_INTERFACE_RANGE" mode="subcommand" optional="true"> </PARAM>
      </PARAM>
      <ACTION builtin="clish_pyobj"> sonic_cli_stp del_stp_mst_config instance ${inst-id} ${vlan-id}
 </ACTION>
      <DOCGEN>
        <DESCRIPTION>
                 Unconfigure VLANs to an MST instance.
             </DESCRIPTION>
        <USAGE>
                 This command allows to deassigning VLANs to an MST instance. 
             </USAGE>
        <EXAMPLE>
                 sonic-cli(config)# spanning-tree mst configuration
                 sonic-cli(config-mst)# no instance 1 vlan 100
             </EXAMPLE>
        <FEATURE> Multiple Spanning Tree Protocol </FEATURE>
      </DOCGEN>
    </COMMAND>
  </VIEW>
</CLISH_MODULE>
